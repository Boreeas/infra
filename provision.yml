---
- hosts: servers
  remote_user: root
  gather_facts: false
  tasks:
    - name: install python for ansible
      raw: "pacman -Syy --noconfirm python"
      changed_when: false


- hosts: servers
  remote_user: root

  vars:
    cron_pacman_log: /var/log/cron-pacman.log
    normal_user_name: mu
    dotfiles_url: https://github.com/Boreeas/.dotfiles.git

  tasks:
    - name: set hostname
      hostname: name={{ hostname }}

    - name: set hostname permanently
      template:
        src: files/hostname.j2
        dest: /etc/hostname

    - name: set timezone
      timezone: name=Europe/Berlin

    - name: enable ntp
      shell: timedatectl set-ntp true
      notify:
        - restart cron

    - name: render locale config
      template:
        src: files/locale.gen
        dest: /etc/locale.gen

    - name: generate locales
      shell: locale-gen

    - name: configure locale
      shell: localectl set-locale LANG=en_us.UTF-8 LC_TIME=de_DE.UTF-8 LC_COLLATE=C LC_CTYPE=en_US.UTF-8 LC_NUMERIC=en_US.UTF-8 LC_MONETARY=en_US.UTF-8 LC_MESSAGES=en_US.UTF-8 LC_PAPER=en_US.UTF-8 LC_NAME=en_US.UTF-8 LC_ADDRESS=en_US.UTF-8 LC_TELEPHONE=en_US.UTF-8 LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=en_US.UTF-8

    - name: upgrade packages
      pacman:
        update_cache: yes
        upgrade: yes

    - name: install necessary packages
      pacman:
        name: "{{ item }}"
        state: latest
      with_items:
        - zsh
        - termite-terminfo
        - cronie
        - git
        - sudo
        - rsync
        - strace
        - htop
        - lsof
        - vim
        - screen
        - python-pip
        - unzip
        - pv

    - name: "sudo: enable wheel group"
      template:
        src: files/sudo_wheel
        dest: /etc/sudoers.d/wheel

    - name: "sudo: configure sudo"
      copy:
        src: files/sudo_conf
        dest: /etc/sudoers.d/config

    - name: "cron: set MAILTO"
      cron:
        env: yes
        name: MAILTO
        value: "{{ admin_mail }}"

    - name: enable pacman auto-updates
      cron:
        name: pacman auto-updates
        hour: 0
        minute: 0
        job: "(echo; date; pacman -Syyu --quiet --noconfirm) &>>{{ cron_pacman_log }} || (echo 'cron-pacman: update failed!'; tail {{ cron_pacman_log }}; false)"

    - name: populate /etc/skel
      git:
        repo: "{{ dotfiles_url }}"
        dest: /etc/skel/.dotfiles

    - name: enable zsh for root
      shell: cp -r /etc/skel/.dotfiles /root/.dotfiles && /root/.dotfiles/script/bootstrap
      args:
        executable: /bin/bash
        creates: /root/.zshrc
        stdin: |
            root
            {{ admin_mail }}

    - name: set root password
      user:
        name: root
        password: "{{ root_pass }}"

    - name: set root shell to zsh
      user:
        name: root
        shell: /bin/zsh

    - name: create normal user
      user:
        name: "{{ normal_user_name }}"
        groups:
          - wheel
        append: yes
        shell: /bin/zsh
        password: "{{ normal_user_pass }}"

    - name: configure zsh
      become: yes
      become_user: "{{ normal_user_name }}"
      shell: ./script/bootstrap
      args:
        chdir: .dotfiles
        executable: /bin/bash
        creates: ~/.zshrc
        stdin: |
          {{ normal_user_name }}
          {{ admin_mail }}

    - name: set authorized keys for root
      authorized_key:
        user: root
        key: "{{ item }}"
      with_file: files/authorized_keys

    - name: set authorized_keys for {{ normal_user_name }}
      become: yes
      become_user: "{{ normal_user_name }}"
      authorized_key:
        user: "{{ normal_user_name }}"
        key: "{{ item }}"
      with_file: files/authorized_keys

    - name: configure ssh
      template:
        src: files/sshd_config.j2
        dest: /etc/ssh/sshd_config
      notify:
        - restart sshd

    - name: New user for AUR management
      user:
        name: aurman
        comment: "AUR manager"
        shell: /bin/nologin
        home: /var/lib/aurman
        system: yes
        state: present

    - name: enable passwordless pacman for aurman
      copy:
        src: sudo_aurman
        dest: /etc/sudoers.d/999-aurman

    - name: clean install of cower (remove old)
      pacman:
        name: cower
        state: absent

    - name: clean install of cower
      environment:
        PATH: "{{ ansible_env.PATH }}:/usr/bin:/usr/bin/site_perl:/usr/bin/vendor_perl:/usr/bin/core_perl"
      aur:
        name: cower
        user: aurman


  handlers:
    - name: restart sshd
      service:
        name: sshd
        state: restarted
        enabled: yes
    - name: restart cron
      service:
        name: cronie
        state: restarted
        enabled: yes

